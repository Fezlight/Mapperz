# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Mapperz CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  maven-servers: |
    [{
      "id": "sonatype-nexus-snapshots",
      "username": "${env.MAVEN_REPOSITORY_USERNAME}",
      "password": "${env.MAVEN_REPOSITORY_PASSWORD}"
    },
    {
      "id": "sonatype-nexus-staging",
      "username": "${env.MAVEN_REPOSITORY_USERNAME}",
      "password": "${env.MAVEN_REPOSITORY_PASSWORD}"
    }]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
      - name: Run maven tests
        run: mvn -B verify --file pom.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          functionalities: network
          verbose: true
  deploy-snapshot:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
      - name: Publish to maven central
        run: mvn --batch-mode deploy -Dmaven.test.skip=true -s ci_settings.xml
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGN_KEY: ${{ secrets.SIGN_KEY }}
          SIGN_KEY_ID: ${{ secrets.SIGN_KEY_ID }}
          SIGN_KEY_PASS: ${{ secrets.SIGN_KEY_PASS }}
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: target/*.jar
  release:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'
      - name: Release version
        uses: qcastel/github-actions-maven-release@master
        env:
         JAVA_HOME: /usr/lib/jvm/java-1.8-openjdk/
         MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
         MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        with:
          maven-args: "--batch-mode -Dmaven.test.skip=true -Ddockerfile.skip -DdockerCompose.skip"
          maven-servers: $maven-servers
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          gpg-enabled: true
          gpg-key-id: ${{ secrets.SIGN_KEY_ID }}
          gpg-passphrase: ${{ secrets.SIGN_KEY_PASS }}
          gpg-key: ${{ secrets.SIGN_KEY }}


