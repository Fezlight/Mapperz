# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Mapperz CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven
        id: cache-maven
        uses: actions/cache@v3
        env:
          cache-name: cache-maven
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Run maven tests
        run: mvn -B verify --file pom.xml
  coverage:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Cache Maven
        id: cache-maven
        uses: actions/cache@v3
        env:
          cache-name: cache-maven
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: list files
        run: tree -d
      - uses: irongut/CodeCoverageSummary@v1.3.0
        with:
         filename: target/site/cobertura/coverage.xml
  deploy:
    if: contains( github.ref, 'master')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Publish to maven central
        run: mvn --batch-mode deploy -Dmaven.test.skip=true
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: target/*.jar
